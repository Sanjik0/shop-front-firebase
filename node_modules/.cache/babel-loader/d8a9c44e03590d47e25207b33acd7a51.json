{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/babel-loader/lib/index.js!/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/store/record.js","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/store/record.js","mtime":1590428147119},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvc2Fuemhhci9QdWJsaWMvUHJvamVjdHMvVnVlIFByb2plY3RzL3Nob3AtZmlyZWJhc2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZS9hcHAnOwpleHBvcnQgZGVmYXVsdCB7CiAgYWN0aW9uczogewogICAgY3JlYXRlUmVjb3JkOiBmdW5jdGlvbiBjcmVhdGVSZWNvcmQoX3JlZiwgcmVjb3JkKSB7CiAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCB1aWQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gY3JlYXRlUmVjb3JkJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoZGlzcGF0Y2goJ2dldFVpZCcpKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICB1aWQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoIi91c2Vycy9uOVBoRnQ5UExOUzQxNXduMzdiNUpkeE42THExL3Byb2R1Y3RzIikucHVzaChyZWNvcmQpKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRFcnJvcicsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIG51bGwsIFtbMSwgMTBdXSk7CiAgICB9LAogICAgZmV0Y2hSZWNvcmRzOiBmdW5jdGlvbiBmZXRjaFJlY29yZHMoX3JlZjIpIHsKICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIHVpZCwgcmVjb3JkczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBmZXRjaFJlY29yZHMkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoZGlzcGF0Y2goJ2dldFVpZCcpKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICB1aWQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigiL3VzZXJzL245UGhGdDlQTE5TNDE1d24zN2I1SmR4TjZMcTEvcHJvZHVjdHMiKS5vbmNlKCd2YWx1ZScpKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDIuc2VudC52YWwoKTsKCiAgICAgICAgICAgICAgaWYgKF9jb250ZXh0Mi50MCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0ge307CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIHJlY29yZHMgPSBfY29udGV4dDIudDA7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIE9iamVjdC5rZXlzKHJlY29yZHMpLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcmVjb3Jkc1trZXldLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBrZXkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNDsKICAgICAgICAgICAgICBfY29udGV4dDIudDEgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRFcnJvcicsIF9jb250ZXh0Mi50MSk7CiAgICAgICAgICAgICAgdGhyb3cgX2NvbnRleHQyLnQxOwoKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIG51bGwsIFtbMSwgMTRdXSk7CiAgICB9LAogICAgZmV0Y2hSZWNvcmRCeUlkOiBmdW5jdGlvbiBmZXRjaFJlY29yZEJ5SWQoX3JlZjMsIGlkKSB7CiAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCB1aWQsIHJlY29yZDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBmZXRjaFJlY29yZEJ5SWQkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoZGlzcGF0Y2goJ2dldFVpZCcpKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICB1aWQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigiL3VzZXJzL245UGhGdDlQTE5TNDE1d24zN2I1SmR4TjZMcTEvcHJvZHVjdHMiKS5jaGlsZChpZCkub25jZSgndmFsdWUnKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzLnNlbnQudmFsKCk7CgogICAgICAgICAgICAgIGlmIChfY29udGV4dDMudDApIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IHt9OwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICByZWNvcmQgPSBfY29udGV4dDMudDA7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9vYmplY3RTcHJlYWQoe30sIHJlY29yZCwgewogICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE0OwogICAgICAgICAgICAgIF9jb250ZXh0My50MSA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgX2NvbnRleHQzLnQxKTsKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDMudDE7CgogICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgbnVsbCwgW1sxLCAxNF1dKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/store/record.js"],"names":["firebase","actions","createRecord","record","dispatch","commit","uid","database","ref","push","fetchRecords","once","val","records","Object","keys","map","key","id","fetchRecordById","child"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,eAAe;AACXC,EAAAA,OAAO,EAAE;AACCC,IAAAA,YADD,8BACkCC,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACeC,cAAAA,QADf,QACeA,QADf,EACyBC,MADzB,QACyBA,MADzB;AAAA;AAAA;AAAA,8CAGqBD,QAAQ,CAAC,QAAD,CAH7B;;AAAA;AAGSE,cAAAA,GAHT;AAAA;AAAA,8CAIgBN,QAAQ,CAACO,QAAT,GAAoBC,GAApB,iDAAwEC,IAAxE,CAA6EN,MAA7E,CAJhB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMGE,cAAAA,MAAM,CAAC,UAAD,cAAN;AANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUCK,IAAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAUeN,cAAAA,QAVf,SAUeA,QAVf,EAUyBC,MAVzB,SAUyBA,MAVzB;AAAA;AAAA;AAAA,8CAYqBD,QAAQ,CAAC,QAAD,CAZ7B;;AAAA;AAYSE,cAAAA,GAZT;AAAA;AAAA,8CAa0BN,QAAQ,CAACO,QAAT,GAAoBC,GAApB,iDAAwEG,IAAxE,CAA6E,OAA7E,CAb1B;;AAAA;AAAA,4CAaiHC,GAbjH;;AAAA;AAAA;AAAA;AAAA;;AAAA,6BAa0H,EAb1H;;AAAA;AAaSC,cAAAA,OAbT;AAAA,gDAcUC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,GAArB,CAAyB,UAAAC,GAAG;AAAA,yCAASJ,OAAO,CAACI,GAAD,CAAhB;AAAuBC,kBAAAA,EAAE,EAAED;AAA3B;AAAA,eAA5B,CAdV;;AAAA;AAAA;AAAA;AAgBGZ,cAAAA,MAAM,CAAC,UAAD,eAAN;AAhBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBCc,IAAAA,eApBD,kCAoBqCD,EApBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBkBd,cAAAA,QApBlB,SAoBkBA,QApBlB,EAoB4BC,MApB5B,SAoB4BA,MApB5B;AAAA;AAAA;AAAA,8CAsBqBD,QAAQ,CAAC,QAAD,CAtB7B;;AAAA;AAsBSE,cAAAA,GAtBT;AAAA;AAAA,8CAuByBN,QAAQ,CAACO,QAAT,GAAoBC,GAApB,iDAAwEY,KAAxE,CAA8EF,EAA9E,EAAkFP,IAAlF,CAAuF,OAAvF,CAvBzB;;AAAA;AAAA,4CAuB0HC,GAvB1H;;AAAA;AAAA;AAAA;AAAA;;AAAA,6BAuBmI,EAvBnI;;AAAA;AAuBST,cAAAA,MAvBT;AAAA,kEAwBcA,MAxBd;AAwBsBe,gBAAAA,EAAE,EAAFA;AAxBtB;;AAAA;AAAA;AAAA;AA0BGb,cAAAA,MAAM,CAAC,UAAD,eAAN;AA1BH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE,CAAf","sourcesContent":["import firebase from 'firebase/app'\n\nexport default {\n    actions: {\n        async createRecord({dispatch, commit}, record) {\n            try {\n                const uid = await dispatch('getUid')\n                return await firebase.database().ref(`/users/n9PhFt9PLNS415wn37b5JdxN6Lq1/products`).push(record)\n            } catch (e) {\n                commit('setError', e)\n                throw e\n            }\n        },\n        async fetchRecords({dispatch, commit}) {\n            try {\n                const uid = await dispatch('getUid')\n                const records = (await firebase.database().ref(`/users/n9PhFt9PLNS415wn37b5JdxN6Lq1/products`).once('value')).val() || {} \n                return Object.keys(records).map(key => ({...records[key], id: key}))\n            } catch (e) {\n                commit('setError', e)\n                throw e\n            }\n        },\n        async fetchRecordById({dispatch, commit}, id) {\n            try {\n                const uid = await dispatch('getUid')\n                const record = (await firebase.database().ref(`/users/n9PhFt9PLNS415wn37b5JdxN6Lq1/products`).child(id).once('value')).val() || {} \n                return {...record, id}\n            } catch (e) {\n                commit('setError', e)\n                throw e\n            }\n        }\n    }\n}"]}]}