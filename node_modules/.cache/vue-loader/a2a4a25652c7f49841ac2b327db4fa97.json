{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop/src/components/app/Sidebar.vue?vue&type=style&index=0&id=18b6d86e&lang=scss&scoped=true&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/src/components/app/Sidebar.vue","mtime":1590323836930},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2lkZW5hdiB7CiAgICBsaSB7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAycmVtOwogICAgICAgIGkgewogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICB9CiAgICAgICAgYSB7CiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMXJlbTsKICAgICAgICB9CiAgICB9CiAgICAuYWN0aXZlIHsKICAgICAgIGEsIGkgewogICAgICAgICAgIGNvbG9yOiAjZmZmOwogICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/components/app","sourcesContent":["<template>\n  <ul class=\"sidenav app-sidenav\" :class=\"{open: value}\">\n    <li\n        v-for=\"link in links\"\n        :key=\"link.url\"\n        @click=\"linkRouter(link.url)\"\n        :style=\"{backgroundColor: selectedRoute == link.url ? selectedColor : ''}\"\n        :class=\"{active: selectedRoute == link.url}\"\n    >\n        <i class=\"material-icons\">{{link.icon}}</i>\n        <a href=\"#\" class=\"waves-effect waves-orange pointer\">{{link.title}}</a>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport localizeFilter from '@/filters/localize.filter'\n\nexport default {\n    props: ['value'],\n    data: () => ({\n        links: [\n            {title: localizeFilter('Menu_Bill'), url: '/', icon: 'open_in_new', exact: true},\n            {title: localizeFilter('Menu_History'), url: '/history', icon: 'library_books',},\n            {title: localizeFilter('Menu_NewRecord'), url: '/record', icon: 'create',},\n            {title: localizeFilter('Menu_Categories'), url: '/categories', icon: 'folder_special',},\n        ],\n        selectedColor: '',\n        selectedRoute: ''\n    }),\n    methods: {\n        linkRouter(url, val) {\n            this.$router.push(url)\n            this.selectedRoute = url\n        }\n    },\n    async created() {\n        const settings = await this.$store.dispatch('fetchSettings')\n        this.selectedColor = settings.selectedColor\n    }\n} \n</script>\n\n<style lang=\"scss\" scoped>\n.sidenav {\n    li {\n        border-bottom: 1px solid #eee;\n        display: flex;\n        cursor: pointer;\n        padding-left: 2rem;\n        i {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n        a {\n            padding-left: 1rem;\n        }\n    }\n    .active {\n       a, i {\n           color: #fff;\n       }\n    }\n}\n</style>"]}]}