{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop/src/components/CategoryEdit.vue?vue&type=style&index=0&id=0d179f50&lang=scss&scoped=true&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/src/components/CategoryEdit.vue","mtime":1589404050012},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHsKICAucGFnZS1zdWJ0aXRsZSB7CiAgICAgIG1hcmdpbi10b3A6IDJyZW07CiAgICAgIGg0IHsKICAgICAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTsKICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07CiAgICAgIH0KICB9Cn0K"},{"version":3,"sources":["CategoryEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CategoryEdit.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"col s12 m6\">\n        <div>\n            <div class=\"page-subtitle\">\n                <h4>{{'Edit' | localize}}</h4>\n            </div>\n\n            <form @submit.prevent=\"submitHandler\">\n                <div class=\"input-field\" >\n                    <select ref=\"select\" v-model=\"current\">\n                        <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\n                            {{category.title}}\n                        </option>\n                    </select>\n                    <label>{{'Select_Category' | localize}}</label>\n                </div>\n\n                <div class=\"input-field\">\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        v-model=\"title\"\n                        :class=\"{invalid: $v.title.$dirty && !$v.title.required}\"\n                    >\n                    <label for=\"name\">{{'Title' | localize}}</label>\n                    <span \n                        v-if=\"$v.title.$dirty && !$v.title.required\"\n                        class=\"helper-text invalid\"\n                    >\n                        {{'Enter_category' | localize}}\n                    </span>\n                </div>\n\n                <div class=\"input-field\">\n                    <input\n                        id=\"limit\"\n                        type=\"number\"\n                        v-model.number=\"limit\"\n                        :class=\"{invalid: $v.limit.$dirty && !$v.limit.minValue}\"\n                    >\n                    <label for=\"limit\">{{'Limit' | localize}}</label>\n                    <span \n                        class=\"helper-text invalid\"\n                        v-if=\"$v.limit.$dirty && !$v.limit.minValue\"\n                    >\n                        {{'Minimum_value' | localize}} {{$v.limit.$params.minValue.min}}\n                    </span>\n                </div>\n\n                <button class=\"btn waves-effect waves-light\" type=\"submit\">\n                {{'Update' | localize}}\n                <i class=\"material-icons right\">send</i>\n                </button>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport  {required, minValue} from 'vuelidate/lib/validators'\n\nexport default {\n    props: {\n        categories: {\n            type: Array,\n            required: true\n        }\n    },\n    data:() => ({\n        select: null,\n        title: '',\n        limit: 100,\n        current: null\n    }), \n    validations: {\n        title: {required},\n        limit: {minValue: minValue(100)}\n    },\n    watch: {\n        current(catId) {\n            const {title, limit} = this.categories.find(category => category.id === catId)\n            this.title = title\n            this.limit = limit\n        }\n    },\n    created () {\n        const {id, title, limit} = this.categories[0]\n        this.current = id\n        this.title = title\n        this.limit = limit\n    },\n    methods: {\n        async submitHandler() {\n            if (this.$v.$invalid) {\n                this.$v.$touch()\n                return\n            }\n\n            try {\n                const categoryData = {\n                    id: this.current,\n                    title: this.title,\n                    limit: this.limit\n                }\n                await this.$store.dispatch('updateCategory', categoryData)   \n                this.$message('Категория успешно изменена')\n                this.$emit('updated', categoryData)\n            } catch (error) {\n                console.log(e)\n            }\n        }\n    },\n    mounted () {\n        M.updateTextFields()\n        this.select = M.FormSelect.init(this.$refs.select);\n    },\n    destroyed() {\n        if (this.select && this.select.destroyed) {\n            this.select.destroyed()\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@media (max-width: 400px) {\n  .page-subtitle {\n      margin-top: 2rem;\n      h4 {\n          font-size: 1.75rem;\n          margin-bottom: 1rem;\n      }\n  }\n}\n</style>"]}]}