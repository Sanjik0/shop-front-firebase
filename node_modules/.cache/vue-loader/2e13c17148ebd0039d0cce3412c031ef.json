{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop/src/views/AddСustomer.vue?vue&type=style&index=0&id=fdc83d92&lang=scss&scoped=true&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/src/views/AddСustomer.vue","mtime":1589404050016},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkgewogIC5wYWdlLXRpdGxlIHsKICAgIG1hcmdpbi1ib3R0b206IDJyZW07CiAgfQogIC5pbnB1dC1maWVsZCB7CiAgICBtYXJnaW4tdG9wOiAxLjI1cmVtOwogIH0KfQo="},{"version":3,"sources":["AddСustomer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddСustomer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"page-title\">\n      <h3>{{'Menu_AddCustomer' | localize}}</h3>\n    </div>\n\n    <Loader v-if=\"loading\" />\n    \n    <form class=\"form\" v-else @submit.prevent=\"handleSubmitCustomers\">\n      <div class=\"input-field\">\n        <input id=\"name\" type=\"text\" v-model=\"name\" :class=\"{invalid: $v.name.$dirty && !$v.name.required}\" />\n        <label for=\"name\">{{'FullName' | localize}}</label>\n        <small \n            class=\"helper-text invalid\"\n            v-if=\"$v.name.$dirty && !$v.name.required\"\n        >{{'Message_EnterName' | localize}}</small>\n      </div>\n\n      <div class=\"input-field\">\n        <input id=\"phone\" type=\"tel\" v-model=\"phone\" :class=\"{invalid: $v.phone.$dirty && !$v.phone.required}\" />\n        <label for=\"phone\">{{'Phone' | localize}}</label>\n        <small \n            class=\"helper-text invalid\"\n            v-if=\"$v.phone.$dirty && !$v.phone.required\"\n        >{{'Phone' | localize}}</small>\n      </div>\n\n      <div class=\"input-field\">\n        <input id=\"email\" type=\"email\" v-model=\"email\" :class=\"{invalid: $v.email.$dirty && !$v.email.required}\" />\n        <label for=\"email\">E-mail</label>\n        <small \n            class=\"helper-text invalid\"\n            v-if=\"$v.email.$dirty && !$v.email.required\"\n        >E-mail</small>\n      </div>\n\n      <button class=\"btn waves-effect waves-light\" type=\"submit\">\n        {{'Add' | localize}}\n        <i class=\"material-icons right\">send</i>\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport  {email, required} from 'vuelidate/lib/validators'\nimport {mapGetters} from 'vuex'\n\nexport default {\n  metaInfo() {\n      return {\n          title: this.$title('Menu_AddCustomer')\n      }\n  },\n  name: 'record',\n  data: () => ({\n    loading: true,\n    name: '',\n    phone: '',\n    email: '',\n    addedDate: null\n  }),\n  validations: {\n    name: { required },\n    phone: { required },\n    email: { email, required }\n  },\n  mounted() {\n    this.loading = false\n\n    setTimeout(() => {\n      this.select = M.FormSelect.init(this.$refs.select)\n      M.updateTextFields()\n    }, 0)\n  },\n  computed: {\n    ...mapGetters(['info']),\n   },\n  methods: {\n    async handleSubmitCustomers() {\n      if (this.$v.$invalid) {\n          this.$v.$touch()\n          return\n      }\n\n        try {\n            await this.$store.dispatch('addCustomer', {\n                name: this.name,\n                phone: this.phone,\n                email: this.email,\n                addedDate: new Date().toJSON()\n            })\n            \n            this.$message('Запись успешно создана')\n            this.$v.$reset()\n            this.name = ''\n            this.phone = ''\n            this.email = ''\n        } catch (e) {\n            console.log(e)\n        }\n    }\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\n@media (max-width: 400px) {\n  .page-title {\n    margin-bottom: 2rem;\n  }\n  .input-field {\n    margin-top: 1.25rem;\n  }\n}\n</style>"]}]}