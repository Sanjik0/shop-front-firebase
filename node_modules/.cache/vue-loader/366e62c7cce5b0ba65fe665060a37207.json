{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/src/views/Register.vue","mtime":1589404050020},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGh9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKIApleHBvcnQgZGVmYXVsdCB7CiAgICBtZXRhSW5mbygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0aXRsZTogdGhpcy4kdGl0bGUoJ1JlZ2lzdGVyJykKICAgICAgICB9CiAgICB9LAogICAgbmFtZTogJ3JlZ2lzdGVyJywKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICBuYW1lOiAnJywKICAgICAgICBhZ3JlZTogZmFsc2UKICAgIH0pLAogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBlbWFpbDoge2VtYWlsLCByZXF1aXJlZH0sCiAgICAgICAgcGFzc3dvcmQ6IHtyZXF1aXJlZCwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNil9LAogICAgICAgIG5hbWU6IHtyZXF1aXJlZH0sCiAgICAgICAgYWdyZWU6IHtjaGVja2VkOiB2ID0+IHZ9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIHN1Ym1pdEhhbmRsZXIoKSB7ICAgIAogICAgICAgICAgICBpZiAodGhpcy4kdi4kaW52YWxpZCkgewogICAgICAgICAgICAgICAgdGhpcy4kdi4kdG91Y2goKSAKICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgfQogICAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IHsKICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsCiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUKICAgICAgICAgICAgfQogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JlZ2lzdGVyJywgZm9ybURhdGEpCiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnLycpCiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9CiAgICAgICAgfQogICAgfQp9IAo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n    <div class=\"card-content\">\n      <span class=\"card-title\">Домашняя бухгалтерия</span>\n      <div class=\"input-field\">\n          <input\n              id=\"email\"\n              type=\"text\"\n              v-model.trim=\"email\"\n              :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n          >\n          <label for=\"email\">Email</label>\n          <small \n              class=\"helper-text invalid\"\n              v-if=\"$v.email.$dirty && !$v.email.required\"\n          >Поле не должно быть пустым</small>\n          <small \n              class=\"helper-text invalid\"\n              v-else-if=\"$v.email.$dirty && !$v.email.email\"\n          >Введите корректные данные</small>\n      </div>\n      <div class=\"input-field\">\n          <input\n              id=\"password\"\n              type=\"password\"\n              v-model.trim=\"password\"\n              :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n          >\n          <label for=\"password\">Пароль</label>\n          <small \n              class=\"helper-text invalid\"\n              v-if=\"$v.password.$dirty && !$v.password.required\"\n          >Поле не должно быть пустым</small>\n          <small \n              class=\"helper-text invalid\"\n              v-else-if=\"$v.password.$dirty && !$v.password.minLength\"\n          >В поле должно быть минимум 6</small>\n      </div>\n      <div class=\"input-field\">\n        <input\n            id=\"name\" \n            type=\"text\" \n            v-model.trim=\"name\"\n            :class=\"{invalid: $v.name.$dirty && !$v.name.required}\"\n        />\n        <label for=\"name\">Имя</label>\n        <small class=\"helper-text invalid\" v-if=\"$v.name.$dirty && !$v.name.required\">Поле не должно быть пустым</small>\n      </div>\n      <p>\n        <label>\n          <input type=\"checkbox\" v-model=\"agree\" />\n          <span>С правилами согласен</span>\n        </label>\n      </p>\n    </div>\n    <div class=\"card-action\">\n      <div>\n        <button class=\"btn waves-effect waves-light auth-submit\" type=\"submit\">\n          Зарегистрироваться\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </div>\n\n      <p class=\"center\">\n        Уже есть аккаунт?\n        <router-link to=\"/login\">Войти!</router-link>\n      </p>\n    </div>\n  </form>\n</template>\n\n<script>\nimport {email, required, minLength} from 'vuelidate/lib/validators'\n \nexport default {\n    metaInfo() {\n        return {\n            title: this.$title('Register')\n        }\n    },\n    name: 'register',\n    data: () => ({\n        email: '',\n        password: '',\n        name: '',\n        agree: false\n    }),\n    validations: {\n        email: {email, required},\n        password: {required, minLength: minLength(6)},\n        name: {required},\n        agree: {checked: v => v}\n    },\n    methods: {\n        async submitHandler() {    \n            if (this.$v.$invalid) {\n                this.$v.$touch() \n                    return\n            }\n            const formData = {\n                email: this.email,\n                password: this.password,\n                name: this.name\n            }\n            try {\n                await this.$store.dispatch('register', formData)\n                this.$router.push('/')\n            } catch (e) {}\n        }\n    }\n} \n</script>"]}]}