{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/views/Profile.vue","mtime":1590428701187},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyByZXF1aXJlZCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IGxvY2FsaXplRmlsdGVyIGZyb20gJ0AvZmlsdGVycy9sb2NhbGl6ZS5maWx0ZXInCgpleHBvcnQgZGVmYXVsdCB7CiAgbWV0YUluZm8oKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogdGhpcy4kdGl0bGUoJ1Byb2ZpbGVUaXRsZScpCiAgICB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgbmFtZTogJycsCiAgICBpc1J1TG9jYWxlOiB0cnVlCiAgfSksCiAgdmFsaWRhdGlvbnM6IHsKICAgIG5hbWU6IHsgcmVxdWlyZWQgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubmFtZSA9IHRoaXMuaW5mby5uYW1lCiAgICB0aGlzLmlzUnVMb2NhbGUgPSB0aGlzLmluZm8ubG9jYWxlID09PSAncnUtUlUnCiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCkKICAgIH0pCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2luZm8nXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoWyd1cGRhdGVJbmZvJ10pLAogICAgYXN5bmMgc3VibWl0SGFuZGxlcigpIHsgICAgCiAgICAgICAgaWYgKHRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICAgICAgdGhpcy4kdi4kdG91Y2goKSAKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIHRyeSB7CiAgICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZUluZm8oewogICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsCiAgICAgICAgICAgIGxvY2FsZTogdGhpcy5pc1J1TG9jYWxlID8gJ3J1LVJVJyA6ICdlbi1VUycKICAgICAgICAgIH0pCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"page-title\">\n      <h3>{{'ProfileTitle' | localize}}</h3>\n    </div>\n\n    <form class=\"form\" @submit.prevent=\"submitHandler\">\n      <div class=\"input-field\">\n        <input id=\"description\" type=\"text\" v-model=\"name\" :class=\"{invalid: $v.name.$dirty && !$v.name.required}\" />\n        <label for=\"description\">{{'Name' | localize}}</label>\n        <small \n            class=\"helper-text invalid\"\n            v-if=\"$v.name.$dirty && !$v.name.required\"\n            >{{'Message_EnterName' | localize}}</small>\n      </div>\n\n      <div class=\"switch\">\n        <label>\n          {{'EN_lang' | localize}}\n          <input type=\"checkbox\" v-model=\"isRuLocale\">\n          <span class=\"lever\"></span>\n          {{'RU_lang' | localize}}\n        </label>\n      </div>\n\n\n      <button class=\"btn waves-effect waves-light\" type=\"submit\">\n        {{'Update' | localize}}\n        <i class=\"material-icons right\">send</i>\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { required } from 'vuelidate/lib/validators'\nimport localizeFilter from '@/filters/localize.filter'\n\nexport default {\n  metaInfo() {\n    return {\n      title: this.$title('ProfileTitle')\n    }\n  },\n  data: () => ({\n    name: '',\n    isRuLocale: true\n  }),\n  validations: {\n    name: { required }\n  },\n  mounted() {\n    this.name = this.info.name\n    this.isRuLocale = this.info.locale === 'ru-RU'\n    setTimeout(() => {\n      M.updateTextFields()\n    })\n  },\n  computed: {\n    ...mapGetters(['info'])\n  },\n  methods: {\n    ...mapActions(['updateInfo']),\n    async submitHandler() {    \n        if (this.$v.$invalid) {\n            this.$v.$touch() \n            return\n        }\n        try {\n          await this.updateInfo({\n            name: this.name,\n            locale: this.isRuLocale ? 'ru-RU' : 'en-US'\n          })\n        } catch (error) {}\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.switch {\n  margin-bottom: 2em;\n}\n</style>"]}]}