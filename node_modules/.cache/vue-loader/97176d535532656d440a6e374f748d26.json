{"remainingRequest":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/src/views/Login.vue","mtime":1589404050016},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanzhar/Public/Projects/Vue Projects/shop-firebase/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGh9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IG1lc3NhZ2VzIGZyb20gJ0AvdXRpbHMvbWVzc2FnZXMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBtZXRhSW5mbygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0aXRsZTogdGhpcy4kdGl0bGUoJ0xvZ2luJykKICAgICAgICB9CiAgICB9LAogICAgbmFtZTogJ2xvZ2luJywKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJwogICAgfSksCiAgICB2YWxpZGF0aW9uczogewogICAgICAgIGVtYWlsOiB7ZW1haWwsIHJlcXVpcmVkfSwKICAgICAgICBwYXNzd29yZDoge3JlcXVpcmVkLCBtaW5MZW5ndGg6IG1pbkxlbmd0aCg2KX0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIGlmIChtZXNzYWdlc1t0aGlzLiRyb3V0ZS5xdWVyeS5tZXNzYWdlXSkgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlKG1lc3NhZ2VzW3RoaXMuJHJvdXRlLnF1ZXJ5Lm1lc3NhZ2VdKQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgc3VibWl0SGFuZGxlcigpIHsgICAgCiAgICAgICAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKSB7CiAgICAgICAgICAgICAgICB0aGlzLiR2LiR0b3VjaCgpIAogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZAogICAgICAgICAgICB9CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbG9naW4nLCBmb3JtRGF0YSkKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJykKICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICAgICAgfQogICAgfQp9IAo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n        <div class=\"card-content\">\n            <span class=\"card-title\">Домашняя бухгалтерия</span>\n            <div class=\"input-field\">\n                <input\n                    id=\"email\"\n                    type=\"text\"\n                    v-model.trim=\"email\"\n                    :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n                >\n                <label for=\"email\">Email</label>\n                <small \n                    class=\"helper-text invalid\"\n                    v-if=\"$v.email.$dirty && !$v.email.required\"\n                >Поле не должно быть пустым</small>\n                <small \n                    class=\"helper-text invalid\"\n                    v-else-if=\"$v.email.$dirty && !$v.email.email\"\n                >Введите корректные данные</small>\n            </div>\n            <div class=\"input-field\">\n                <input\n                    id=\"password\"\n                    type=\"password\"\n                    v-model.trim=\"password\"\n                    :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n                >\n                <label for=\"password\">Пароль</label>\n                <small \n                    class=\"helper-text invalid\"\n                    v-if=\"$v.password.$dirty && !$v.password.required\"\n                >Поле не должно быть пустым</small>\n                <small \n                    class=\"helper-text invalid\"\n                    v-else-if=\"$v.password.$dirty && !$v.password.minLength\"\n                >В поле должно быть минимум 6</small>\n            </div>\n        </div>\n        <div class=\"card-action\">\n            <div>\n            <button\n                class=\"btn waves-effect waves-light auth-submit\"\n                type=\"submit\"\n            >\n                Войти\n                <i class=\"material-icons right\">send</i>\n            </button>\n            </div>\n\n            <p class=\"center\">\n            Нет аккаунта?\n            <router-link to=\"/register\">Зарегистрироваться</router-link>\n            </p>\n        </div>\n    </form>\n</template>\n\n<script>\nimport {email, required, minLength} from 'vuelidate/lib/validators'\nimport messages from '@/utils/messages'\n\nexport default {\n    metaInfo() {\n        return {\n            title: this.$title('Login')\n        }\n    },\n    name: 'login',\n    data: () => ({\n        email: '',\n        password: ''\n    }),\n    validations: {\n        email: {email, required},\n        password: {required, minLength: minLength(6)}\n    },\n    mounted() {\n        if (messages[this.$route.query.message]) {\n            this.$message(messages[this.$route.query.message])\n        }\n    },\n    methods: {\n        async submitHandler() {    \n            if (this.$v.$invalid) {\n                this.$v.$touch() \n                    return\n            }\n            const formData = {\n                email: this.email,\n                password: this.password\n            }\n            try {\n                await this.$store.dispatch('login', formData)\n                this.$router.push('/')\n            } catch (error) {}\n        }\n    }\n} \n</script>"]}]}